package br.gov.pi.teresina.semf.modelo;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Transient;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

import br.gov.pi.teresina.semf.enums.Sexo;

@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "tipo")
@SequenceGenerator(name = "Pessoa", sequenceName = "Pessoa_id_seq", allocationSize = 1)
@Audited
@AuditTable(schema = "auditoria", value = "Pessoa_aud")
public class Pessoa {
	
	private Long id;
	private String nomeRazao;
	private String email;
	private String celular;
	private String telefoneResidencial;
	private String telefoneCelular;
	
	private Endereco endereco;
	
	private List<AnexoPessoa> anexos;
	private Sexo sexo;
	
	private Usuario usuario;
	
	@Transient
	public abstract void setDocumento(String documento);
	@Transient
	public abstract String getDocumento();

	public Pessoa() {
	}

	
	@Id
	@GeneratedValue(generator = "Pessoa", strategy = GenerationType.AUTO)
	public Long getId() {
		return id;
	}

	
	public void setId(Long id) {
		this.id = id;
	}

	public String getNomeRazao() {
		if(nomeRazao!=null) nomeRazao = nomeRazao.toUpperCase();
		return nomeRazao;
	}

	public void setNomeRazao(String nomeRazao) {
		this.nomeRazao = nomeRazao;
	}
	
	@OneToOne(orphanRemoval = true, cascade = CascadeType.ALL)
	public Endereco getEndereco() {
		return endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

		
	public String getCelular() {
		return celular;
	}

	public void setCelular(String celular) {
		this.celular = celular;
	}

	public String getTelefoneResidencial() {
		return telefoneResidencial;
	}

	public void setTelefoneResidencial(String telefoneResidencial) {
		this.telefoneResidencial = telefoneResidencial;
	}

	public String getTelefoneCelular() {
		return telefoneCelular;
	}

	public void setTelefoneCelular(String telefoneCelular) {
		this.telefoneCelular = telefoneCelular;
	}
	
	@Transient
	public String getTipoPessoa(){
	    DiscriminatorValue val = this.getClass().getAnnotation( DiscriminatorValue.class );

	    return val == null ? null : val.value();
	}	
	
	@OneToMany(fetch=FetchType.LAZY,mappedBy="pessoa",cascade=CascadeType.ALL)
	public List<AnexoPessoa> getAnexos() {
		return anexos;
	}
	
	public void setAnexos(List<AnexoPessoa> anexos) {
		this.anexos = anexos;
	}
	
	@OneToOne(orphanRemoval = true, cascade = CascadeType.ALL)
	public Usuario getUsuario() {
		return usuario;
	}
	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}
	
	public Sexo getSexo() {
		return sexo;
	}
	public void setSexo(Sexo sexo) {
		this.sexo = sexo;
	}
	
}
